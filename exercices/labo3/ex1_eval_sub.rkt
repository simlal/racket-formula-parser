#lang racket

(define (fact n)
    (if (<= n 0)
        1
        (* n (fact (- n 1)))))

(fact 4)
; (if (4 <= 0) 1  (4 * fact (4 - 1)))
; (4 * fact 3)
; (4 * (if (3 <= 0) 1 ( 3 * fact ( 3 - 1))))
; (4 * (3 * fact 2))
; (4 * 3 (if (2 <= 0) 1 ( 2 * fact ( 2 -1)))
; (4 * 3 (2 * fact 1)
; (4 * 3 * 2 (if (1 <= 0) 1 (1 * fact (1 - 1))))
; (4 * 3 * 2 * 1 (fact 0))
; ( 4 * 3 * 2 * 1 (if 0 <=) 1 (0 * fact 0 - 1))
; (4 * 3 * 2 * 1 * 1)
; 24